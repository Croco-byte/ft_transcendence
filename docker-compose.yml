version: '3.3'

services:
  back:
    container_name: back
    build:
      context: ./srcs/back
    links:
       - "postgres"
    volumes:
      - node_modules_back:/usr/src/app/node_modules
    ports:
      - 3000:3000
      - 9229:9229
    command: npm run start
    env_file:
      - ./srcs/env
    environment:
      - POSTGRES=postgres
      - NODE_ENV=production
    networks:
      - webnet
    depends_on:
      - postgres

  phppgadmin:
    container_name: phppgadmin
    image: neimheadh/phppgadmin:7.13.0
    ports:
      - 8000:80
    links:
      - "postgres"
    env_file:
      - ./srcs/env
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=root
      - POSTGRES_PASS=password
    networks: 
      - webnet
    depends_on:
      - postgres
    
  postgres:
    container_name: postgres
    image: postgres:12
    networks:
      - webnet
    environment:
      POSTGRES_PASSWORD: password
      PGPASSWORD: password
      POSTGRES_USER: root
      POSTGRES_DB: ft_transcendence
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  front:
    container_name: front
    build:
      context: ./srcs/front
    volumes:
      - node_modules_front:/usr/src/app/node_modules
    ports:
      - 8080:8080
      - 9228:9228
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=production
    command: npm run serve
    networks:
      - webnet
    depends_on:
      - back
networks:
  webnet:
volumes:
  pgdata:
  node_modules_front:
  node_modules_back:
